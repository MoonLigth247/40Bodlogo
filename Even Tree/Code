#include <bits/stdc++.h>
using namespace std;

int evenForest(int t_nodes, int t_edges, vector<int> t_from, vector<int> t_to) {
    vector<vector<int>> adj(t_nodes + 1);
    for (int i = 0; i < t_edges; i++) {
        adj[t_from[i]].push_back(t_to[i]);
        adj[t_to[i]].push_back(t_from[i]);
    }

    vector<bool> visited(t_nodes + 1, false);
    int removeEdges = 0;

    function<int(int)> dfs = [&](int node) {
        visited[node] = true;
        int subtreeNodeCount = 1;
        for (int neighbor : adj[node]) {
            if (!visited[neighbor]) {
                int count = dfs(neighbor);
                if (count % 2 == 0) {
                    removeEdges++;
                } else {
                    subtreeNodeCount += count;
                }
            }
        }
        return subtreeNodeCount;
    };

    dfs(1);

    return removeEdges;
}

int main() {
    ios::sync_with_stdio(false);
    cin.tie(NULL);

    int t_nodes, t_edges;
    cin >> t_nodes >> t_edges;

    vector<int> t_from(t_edges);
    vector<int> t_to(t_edges);

    for (int i = 0; i < t_edges; i++) {
        cin >> t_from[i] >> t_to[i];
    }

    int res = evenForest(t_nodes, t_edges, t_from, t_to);
    cout << res << "\n";

    return 0;
}
